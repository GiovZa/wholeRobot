<launch>
<!-- Learn about launch files in ros here: http://wiki.ros.org/roslaunch/XML -->

<!-- This launch file is the poorly put together code that will run on 03/24/23 for NASA's proof of life video-->

<!-- Currently, we need to split these nodes into different launch files so each computer can run its own nodes, not all on the jetson -->

<!-- Launches depth camera with following parameters: 
  https://github.com/IntelRealSense/realsense-ros/tree/ros1-legacy -->

  <!-- This group ns is what shows up in ros graph, making almost everything go inside this camera umbrella, will need to rework structure-->
  <group ns="depth_camera">

  <!--This file can be found in Other Locations/opt/ros/melodic/share/launch/includes on the jetson-->
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">

  <!-- Some of these parameters are in default settings, meaning we don't need to declare them, but leave
  for now as we might need to change these for our next object recognition script-->
      <arg name="depth_width"       value="640"/>
      <arg name="depth_height"      value="480"/>
      <arg name="depth_fps"         value="30"/>
      <arg name="color_width"       value="640"/>
      <arg name="color_height"      value="480"/>
      <arg name="color_fps"         value="30"/>
      <arg name="enable_fisheye"    value="false"/>
      <arg name="enable_pointcloud" value="false"/>
      <arg name="enable_sync"       value="true"/>
      <arg name="enable_gyro"       value="false"/>
      <arg name="enable_accel"      value="false"/>
      <arg name="tf_prefix"         value="camera"/>
      <arg name="align_depth"       value="true"/>
    </include>

<!-- Launches rviz using the rgbd.launch file, opens 3 nodes that seems to not send out topics but if I get rid of them, pointcloud
disappears which is not good, maybe someone figures out why these nodes are needed? The file is in this directory, rgbd.launch -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find realsense2_camera)/rviz/pointcloud.rviz" required="true" />
      <include file="$(find gen2bot)/launch/rgbd.launch">
        <arg name="manager"                       value="realsense2_camera_manager" />
        <arg name="respawn"                       value="false" />      
        <arg name="rgb"                           value="color" />
      </include>

<!-- Remaps pointcloud so that it subscribes to a topic possible for jetson to visualize, without 
this node, jetson won't publish pointcloud, which navigation and qr code relies on -->
    <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered"
      args="load depth_image_proc/point_cloud_xyzrgb realsense2_camera_manager false" respawn="false">
     
      <!-- Need these to make a pointcloud-->
      <remap from="rgb/image_rect_color"        to="color/image_rect_color" />
      <remap from="rgb/camera_info"             to="color/camera_info" />
      <remap from="depth_registered/image_rect" to="aligned_depth_to_color/image_raw" />
      <remap from="depth_registered/points"     to="/depth_camera/depth/color/points" />
    </node>
  </group>

  <!-- Object recognition package to detect QR code and display both position and orientation 
  of QR code relative to camera sensor
  Check out: https://github.com/bandasaikrishna/object_detection_and_3d_pose_estimation -->
  <!-- Will need to decide if we want to keep the gui or not, gives us camera image but takes up space and processing power-->
  <!--Parameter list: http://wiki.ros.org/find_object_2d-->
  <group ns = "qr_code_detector">
    <node name="find_object_3d" pkg="find_object_2d" type="find_object_2d" output="screen">
      <param name="settings_path" value="~/.ros/find_object_2d.ini" type="str"/>
      <param name="subscribe_depth" value="true" type="bool"/>
      <param name="gui" value="true" type="bool"/>

      <!-- Where to store QR code image-->
      <param name="session_path" value="$(find gen2bot)/sessions/qr.bin" type="str"/>
      
      <!-- Remap image topic to one the depth camera uses-->
      <remap from="rgb/image_rect_color" to="/depth_camera/color/image_raw"/>
      <remap from="depth_registered/image_raw" to="/depth_camera/depth/image_rect_raw"/>
      <remap from="depth_registered/camera_info" to="/depth_camera/depth/camera_info"/>

      <remap from="find_object_2d/target_frame" to="/camera_link" />

    </node>
    
  </group>

</launch>
